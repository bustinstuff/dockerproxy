# dockerproxy nginx configuration

http {
  error_log /etc/nginx/error_log.log warn;
  client_max_body_size 20m;
  server_tokens off;

  proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

  # redirect port 80 request to port 443
  server {
	listen 80 http2 default_server;
	listen [::]:80 http2 default_server;
	server_name ${NGINX_HOST};
	return 301 https://$server_name$request_uri;
  }

  # handle port 443 requests
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${NGINX_HOST};

    if (${APP_NAME = ''}) {
        # if app is not defined, serve up blank page

        location / {
            root   /usr/share/nginx/html;
            index  index.html;
        }
    } else {
        # reverse proxy to applicatoin

        proxy_cache one;
        proxy_cache_key $request_method$request_uri;
        proxy_cache_min_uses 1;
        proxy_cache_methods GET;
        proxy_cache_valid 200 1y;

        location / {
            proxy_pass http://your_app_3:80;
            rewrite ^/your_app_3(.*)$ $1 break;
        }
    }

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;

    ssl_certificate /etc/letsencrypt/live/server2.your.domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/server2.your.domain/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
  }
}

# handle / ignore requests not specific
server {
    listen 80;
    listen 443 ssl;
    server_name _;
    return 404;
}

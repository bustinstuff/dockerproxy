# dockerproxy nginx configuration

user nginx;
worker_processes 1;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;

  sendfile on;
  server_tokens off;

  proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

  client_max_body_size 20m;

  index index.html;

  # handle letsencrypt requests
  # redirect 80 request to port 443
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name ${NGINX_HOST} www.${NGINX_HOST};

    location /.well-known/acme-challenge {
      root /usr/share/nginx/html/certbot;
    }

    location / {
      return 301 https://$server_name$request_uri;
    }
  }

  # handle port 443 requests
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${NGINX_HOST} www.${NGINX_HOST};

    ssl_certificate /etc/letsencrypt/default.crt;
    ssl_certificate_key /etc/letsencrypt/default.key;
    ssl_dhparam /etc/letsencrypt/dhparam.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # handle letsencrypt request
    location /.well-known/acme-challenge {
      root /usr/share/nginx/html/certbot;
    }

    # comment out root and configure proxy settings as needed
    location / {
      # proxy_pass http://;
      # proxy_cache one;
      # proxy_buffering off;
      # proxy_pass_header Authorization;
      # proxy_set_header Host $host;
      # proxy_set_header Connection "";
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header X-Forwarded-For $remote_addr;
      # proxy_redirect off;
      # proxy_ssl_session_reuse off;

      root /usr/share/nginx/html/;
    }
  }

  # handle / ignore requests not specific
  server {
      listen 80;
      listen 443 ssl;
      server_name _;
      return 404;
  }
}
